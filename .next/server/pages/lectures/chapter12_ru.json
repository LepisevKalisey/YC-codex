{"pageProps":{"mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h2: \"h2\",\n    p: \"p\",\n    hr: \"hr\",\n    em: \"em\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    h3: \"h3\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Лекция 12: Продажи и маркетинг\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Аарон Леви\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"[Начинается \\\"Eye of the Tiger\\\"]\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Можем ли мы сделать погромче, чтобы было больше драйва? Окей, вот так. Окей. Ребята, мы должны найти ритм, а затем хлопать в ритм. Окей, пожалуйста, остановите музыку. Пожалуйста, включите презентацию. Спасибо. Это будет самое зажигательное, что происходит в корпоративном программном обеспечении. Дальше все пойдет по наклонной. Спасибо за это хорошо отрепетированное вступление.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Я Аарон Леви, генеральный директор и соучредитель Box. Добро пожаловать на эту лекцию о том, как создать компанию по разработке корпорат��вного программного обеспечения. Я так понимаю, это курс, который вы проходите? Это правильно? Нет.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Итак, это моя работа на сегодня. Я попытаюсь убедить вас, что все остальные, кто выступает в этом классе, неправы, и что на самом деле вы хотите создать компанию по разработке корпоративного программного обеспечения. Надеюсь, мы сможем разобраться в этом, и у вас будет хорошее представление о том, почему быть в корпоративном секторе — это очень круто. И почему представления о том, что в потребительском секторе так весело, неверны, и почему вы хотите заняться корпоративным программным обеспечением. Кто хочет создать компанию по разработке корпоративного программного обеспечения? Хорошо, отлично. Большое спасибо. Надеюсь, мы проведем голосование в конце, и, надеюсь, это число не уменьшится. Это действительно единственная цель, которая у меня есть сегодня.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Итак, сегодня мы поговорим о трех вещах. Первое — это краткая история Box. Потому что, когда мы только начинали, мы не знали, что хотим заниматься корпоративным программным обеспечением. Поэтому я хочу немного рассказать о том, почему мы выбрали корпоративный сектор и чем мы занимаемся сегодня. Затем мы поговорим об основных факторах, которые изменились в корпоративном программном обеспечении и которые делают возможным создание стартапа сегодня. И, наконец, мы рассмотрим паттерны, которые являются способами распознать и создать стартап самостоятельно. Надеюсь, это будут практические, полезные советы. Просто предупреждаю, мой голос, я много говорил в последние несколько дней. Так что, надеюсь, я смогу дойти до этой третьей части советов и справиться.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Создание для предприятия, это общие статистические данные о Box. У нас около двухсот сорока тысяч компаний, которые используют Box, более двадцати семи миллионов пользователей, которые принесли Box в свои организации, и девяносто девять процентов из списка Fortune 500. На самом деле, этот один процент — это Microsoft, и они, похоже, не х��тят у нас покупать. Нам нужно немного поработать над этим. Многие пользователи приносят Box в рабочую среду, это некоторые из организаций, которые используют продукт. У нас очень широкий спектр отраслей, от производства потребительских товаров до таких компаний, как General Electric. Stanford Health Care на самом деле использует продукт для совместной работы в поиске медицинского отдела. Между здравоохранением, медиа, производством, это некоторые из отраслей, которые мы обслуживаем.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Итак, вопрос в том, как мы сюда попали? Потому что мы не создавали компанию, чтобы быть компанией по разработке корпоративного программного обеспечения, хотя в итоге все так и п��лучилось. Мы запустили компанию в 2005 году, идея пришла нам в голову еще в колледже, в 2004 году. Кто-нибудь пользовался интернетом в 2004 году? Окей, отлично. Я не знал, пользуются ли миллениалы интернетом или нет, так что отлично. Извините, окей, больше никаких шуток про возраст. Окей, вот в чем дело. Итак, в 2004 году, вы, возможно, помните, тогда было не так много чем заняться. Было скучно, верно? Это было до Facebook, это, безусловно, до Snapchat, так что до того, как было чем заняться. Вы не могли отправлять людям пятнадцатисекундные сообщения или фотографии, которые исчезали, потому что у вас даже не было телефонов. Так что в интернете в 2004 году было не так много в��его. Вот как примерно выглядел интернет, бесплодный пустынный пейзаж. Просто для ясности, счастливый верблюд — это Google, грустный верблюд — это Yahoo! Это интернет в 2004 году. Yahoo! с тех пор значительно улучшился, но в середине 2004 года они пытались найти свой путь. А Google захватывал мир. Но это был весь мир.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Итак, что мы заметили в 2004 году, в колледже, так это то, что по какой-то причине было очень трудно обмениваться файлами. И какой бы простой ни казалась эта идея сейчас, вернитесь на десять лет назад. Перемещать данные через корпоративные компании было либо очень дорого, либо очень сложно. У меня тогда была стажировка, большая часть моей работы с данными заключалась в том, чтобы копировать распечатанные бумаги и складывать их в шкафы. Вот что вы делаете как стажер, если вы не специалист по информатике. Так что я был очень, очень хорош в копировании бумаг, к сожалению, этот навык сегодня не очень используется. Но было очень трудно обмениваться файлами. В учебной среде, вы работали в больших группах, также было трудно обмениваться файлами. Я учился в USC, и USC давал вам пятьдесят мегабайт дискового пространства. Пятьдесят мегабайт, вы можете в основном хранить один файл. Затем он автоматически удалялся каждые шесть месяцев. Так что тот, кто тогда руководил IT, определенно не использовал жесткие диски. И поэтому было очень, очень трудно хранить и обмениваться файлами. Ну, почему бы нам не сделать так, чтобы было легко хранить и обмениваться файлами откуда угодно?\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Так у нас появилась идея, в то время, Box.net. И что мы заметили, так это то, что в мире программного обеспечения изменилось много факторов. Первое — стоимость хранения резко падала. Так что в нашем бизнесе, в основном, каждые год или два вы могли удвоить количество хранимых данных, и данные попадали на жесткий диск. Так что то, что было неэкономично сейчас, стало возможным. Стоимость вычислений, стоимость хранения упала. У нас были более мощные браузеры и сети. Firefox только появлялся. Люди использовали гораздо более быстрый интернет для дома и учебы. Затем у людей появилось больше мест, где они хотели хранить и обмениваться информацией. Так что у нас были эти три фактора, которые как бы появлялись. Так что вернитесь к этим факторам, когда я буду давать тактические советы. Первый момент, который нужно запомнить, всегда ищите изменяющиеся технологические факторы. Каждый рынок, на котором происходили значительные изменения в основных факторах, находился в среде, которая вот-вот должна была измениться очень значительным образом. Нам очень повезло, что потребность в данных в облаке росла по важности. Стоимость и осуществимость также быстро улучшались. Мы решили собрать эту очень быструю версию Box и запустить ее как Box.net. Идея заключалась в том, чтобы сделать обмен файлами очень простым. Оказалось, что идея прижилась. Мы получили ангельское финансирование от этого парня по имени Марк Кьюбан. Это было до Shark Tank, но очень похоже. Так что мы получили это финансирование и подумали, что это будет очень захватывающе.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Мы бросим колледж, переедем в Bay Area, и это будет потрясающе. И когда вы бросаете колледж, кто-нибудь уже бросил колледж? Окей, хорошо. Оставайтесь в школе! Когда вы бросаете колледж, все представляют, что это будет невероятно. Билл Гейтс бросил колледж, это будет как у Билла Гейтса. Или Майкл Делл бросил колледж, это будет очень захватывающе, как у Майкла Делла. Стив Джобс бросил колледж, так что вот что люди представляют, но никто никогда не помнит, что этот парень тоже бросил колледж.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Так что это не гарантия того, что все будет успешно. Забавно, я даже не знаю, бросил ли этот парень колледж. Просто кажется, что он должен был. И я извиняюсь, если кто-то с ним связан, это просто смешная картинка в интернете. Так что, в общем, мы решили бросить колледж, мы переехали сначала в Беркли, затем в Пало-Альто. Мы решили, что откроем продукт бесплатно. У нас регистрировались сотни тысяч людей каждый месяц. Если вы зайдете на Box.net, вы получите один бесплатный гигабайт для хранения файлов. Что, опять же, было много в 2006 году. Но у нас было так много пользователей, что мы пытались понять, что делать.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Мы столкнулись с общей проблемой, с которой сталкивается любой стартап. Особенно ярко выраженной в нашей бизнес-модели, которая заключалась в том, что для потребителей мы создали очень надежное, очень надежное предприятие. Мы действительно представили очень незначительный продукт. Так что для потребителей мы столкнулись с тем, что у нас были все эти функции, за которые можно было платить, но многим потребителям все эти функции были не нужны. А для предприятий у нас действительно не было достаточной безопасности, и у нас не было достаточных возможностей в отношении того, как предприятия хотят использовать свои данные. Так что у нас было больше, чем нужно потребителю, и недостаточно, чем нужно предприятию. Так что мы оказались на распутье. Мы оказались в основном в этом периоде, когда было очень трудно понять, что мы хотим делать с бизнесом. Так что нам пришлось сделать этот выбор. Мы были на этом пути, где нам нужно было выбрать, по какому пути идти.\\nЭто было в начале, середине 2006 года до ко��ца 2006 года. Мне тогда было 23 года, моему соучредителю — 22. Наша команда основателей была еще моложе, мы все бросили колледж. Так что в 2006, 2007 годах мы представляли себе эти два пути, и миры были очень, очень разными. Когда вы делаете потребительский стартап, это в основном очень весело. У вас постоянно вечеринки, это просто очень захватывающе. А в корпоративном секторе вы сражаетесь с этими крупными, это довольно неблагодарная модель, потому что люди в целом просто ненавидят корпоративное программное обеспечение. Так что вот как мы представляли себе эти два пути, нам нужно было выбрать один из этих двух миров. Так что мы посмотрели на это и подум��ли. Окей, потребительский сектор выглядит очень весело, корпоративный — очень сложно, и там много конкуренции. В то же время, в этом потребительском пространстве вы всегда боретесь с проблемой монетизации. Как на самом деле заставить людей платить за продукт? В потребительском пространстве на самом деле есть только две бизнес-модели, которые вы можете использовать.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Вы можете либо заставить людей платить за ваше приложение, либо вы можете предоставлять рекламу в приложении. Чтобы дать вам немного перспективы, это сегодняшние цифры. В потребительском мире ежегодно тратится около тридцати пяти миллиардов на мобильные приложения. Довольно большая цифра, верно? Тридцать пять миллиардов долларов. Это много денег, которые тратятся на мобильные приложения сегодня. Что касается рекламы, то глобальная цифровая реклама составляет 135 миллиардов долларов. Так что большинство потребительских бизнесов, если вы не занимаетесь электронной коммерцией, нацелены на около 170 миллиардов долларов либо покупательной способности на приложения, либо глобальной рекламы вокруг этих типов услуг. Так что большая цифра, много возможностей там.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Однако в корпоративном секторе ежегодно тратится 3,7 триллиона долларов на корпоративные ИТ. Это серверы, инфраструктура, программное обеспечение, сети, ус��уги. Весь этот стек технологий составляет несколько триллионов, потраченных каждый год. Что мы поняли, так это то, что между этими двумя рынками была довольно большая разница. Мы будем бороться за то, чтобы потребители платили несколько долларов в месяц. А Google, Microsoft и Apple со временем попытаются сделать этот продукт бесплатным. И ходили слухи, что скоро выйдет Google Drive. И все эти продукты, которые должны были появиться, выходят. Но в корпоративном секторе дело не в том, чтобы они пытались сэкономить деньги на ИТ. Они либо пытаются повысить производительность, либо пытаются увеличить бизнес. Так что уравнение ценности очень разное. Так что у потребителя у нас ограниченное количество денег, которые мы хотим сохранить на как можно меньшее количество вещей, на которые мы собираемся потратить. В корпоративном секторе это немного сдвиг, на самом деле, что я могу получить от технологии? Какую ценность это для меня представляет? Так что это был очень важный момент.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Однако проблема заключалась в том, что корпоративное программное обеспечение было очень несексуальным, верно? Очень конкурентным, очень трудно построить бизнес. Это не было чем-то, из-за чего вы вскакивали с кровати утром, говоря: «Я очень рад создать компанию по разработке корпоративного программного обеспечения». И причина этого была на самом деле очень проста в то время. Способ, которым вы создавали программное обеспечение, был очень медленным. Он был очень медленным, потому что вы не могли ничего сломать для клиентов, процесс продаж был очень медленным, потому что клиентам требуется много времени, чтобы купить технологию. Так что я думаю, все привыкли к этой философии, что когда вы пытаетесь продать корпоративное программное обеспечение, может потребоваться до нескольких лет, чтобы они на самом деле просто купили программное обеспечение. Затем может потребоваться еще больше лет, чтобы они вообще внедрили технологию. Так что многие компании существуют годами, а их технология даже не используется.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Это казалось огромной проблемой, и не тем, частью чего мы хотели быть. Сама технология сложна, я не знаю, скольким людям приходилось использовать корпоративное программное обеспечение, но оно, как правило, очень сложное. Вы пытаетесь понять, почему, ради всего святого, дизайнер попытался разместить сорок семь кнопок на одной странице. Вы просто не можете этого понять, и причина, к которой мы вернемся через секунду. Но в основном, просто нет любви или заботы о дизайне или обслуживании пользователей. Программное обеспечение просто сложное. И, наконец, если этого было недостаточно, вам нужно было выяснить, как вы собираетесь продавать это программное обеспечение. Для всех, кто любит силу интернета, эта идея иметь посредника по продажам, чтобы добраться до вашего клиента, казалась очень непривлекательной. Вам нужно нанять кучу людей, которые будут в каждой стране, они будут единственным интерфейсом, который у вас есть с вашим клиентом. Вы нанимаете этого парня по имени Чак, и Чак придет с портфелем и попытается продать много корпоративного программного обеспечения клиенту. Просто чтобы было ясно, вот как выглядит Чак. И это был процесс продаж, который вы, по крайней мере, в корпоративном секторе, мы представляли себе в своей голове. Чак выглядит счастливым парнем, но он все еще посредник в получении вашего программного обеспечения. Ну почему нельзя использовать силу интернета и вывести нашу технологию таким образом?\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Почему мы должны проходить через этого посредника по продажам, когда мы масштабируем бизнес? Я вернусь к этому через минуту, почему мы ошибались насчет бизнеса по продажам. Но это был своего рода страх, который у нас был. И если этого было недостаточно, у нас были инвесторы, которые говорили, в 2007 году, в основном, что у вас нет шансов в корпоративном секторе. Вы, опять же, в основном команда основателей из 20-летних. В вашей команде нет никого, кто был бы в корпоративном секторе. Microsoft, Oracle, IBM, эти компании вас раздавят. Будет очень, очень трудно добиться успеха. И, честно говоря, они были правы в нескольких областях. Мы были очень неопытной командой. Мы все еще были очень рано в своей карьере. Наш соучредитель, например, выглядел так, будто ему 13 лет. Просто чтобы было ясно, как он выглядел. Так что это как бы имело смысл, верно? Это он как наш финансовый директор, я думаю, это он в 29 лет. Но выглядело так, будто мы собираемся сбежать с деньгами и поехать в Диснейленд. Я понимаю, почему они не думали, что мы справимся. Я не могу представить, чтобы я дал ему деньги.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Итак, мы решили, что все равно должны это сделать. Мы должны сделать все возможное. Мы собираемся взять масштаб, потребительский опыт, ДНК нашей компании, и мы посмотрим, сможем ли мы привнести это в корпоративный сектор. Нам очень повезло. У нас был инвестор, в начале своей карьеры, который поверил в нас, потому что в корпоративном секторе что-то менялось, и мы могли бы этим воспользоваться. Мы решили, что если мы собираемся заниматься корпоративным сектором, если мы собираемся идти за корпоративным сектором, нам придется играть по совершенно другим правилам. Так что насчет сложности программного обеспечения, что может измениться в эту эпоху? Что насчет очень медленного процесса продаж, что может измениться в эту новую эпоху? Как нам двигаться и идти прямо к пользователю, клиенту, вместо того, чтобы иметь этот очень косвенный процесс вывода нашей технологии на рынок? Как нам создать дизайн для пользователя, а не только для процесса RFP, через который будет проходить клиент? Так что мы рассмотрели все факторы, которые верны для корпоративного сектора, и мы собираемся сделать, не во всех случаях, противоположное. Мы собираемся найти, что изменилось в мире технологий, чтобы мы могли создать новую и лучшую компанию по разработке программного обеспечения. Это было решение, которое мы приняли, путь, на который мы встали 8 лет назад. И именно поэтому мы сосредоточились на корпоративном секторе.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Сегодня, опять же, у нас около двухсот сорока тысяч компаний, использующих продукт. И причина в том, что мы спроектировали бизнес-модель, мы спроектировали программное обеспечение, мы спроектировали решение для работы в одной конкретной версии мира, и оказалось, что это одно решение было тем, которое произошло. И я немного расскажу о том, что изменилось в мире, вокруг которого мы как бы построили нашу компанию. И что я бы настоятельно рекомендовал вам, если вы создаете компанию по разработке корпоративного программного обеспечения, ориентироваться на свою технологию. Так что вот почему мы приняли это решение, как мы начали решать эту проблему.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Итак, все, что касается предприятия, и, по определению, программного обеспечения, которое использует предприятие, изменилось всего за последние 5 лет. Если когда-либо и было волшебное время для создания компании по разработке корпоративного программного обеспечения, то сейчас именно это время с точки зрения того, как много изменилось в том, что происходит с организациями. Давайте рассмотрим пару этих вещей. Первое — это то, что большинство компаний-разработчиков приложений пе��еходят в облако. И самое главное — если вы собираетесь основать компанию по управлению бизнесом, или компанию по бизнес-аналитике, даже компанию по управлению контактами, много лет назад вам нужно было бы внедрить свою идею в каждом отдельном месте клиента. Независимо от того, скольким клиентам вы продали, независимо от того, в каком регионе вы находились, каждый клиент должен был разместить это в своем центре обработки данных. В этом был недостаток локальных вычислений. Вы делали всю эту работу, вы создавали так много избыточности, это замедляло весь процесс доставки и создания программного обеспечения для предприятия. Внезапно появилось облако, такие вещи, как Sales Source. com, такие вещи, как Amazon Web Services, в основном сказали. Почему каждый клиент, который хочет внедрить пару серверов, должен внедрять серверы, размещать их в своем центре обработки данных, обеспечивать безопасность или сети вокруг них, через шесть месяцев они запускаются, и разработчик может использовать их в организации, то же самое с приложением? Они сказали, какой в этом смысл сегодня? Мы могли бы просто собрать десятки тысяч серверов, сделать их доступными по требованию, и вы можете использовать все, что хотите, когда хотите, и мы можем это сделать. Это, очевидно, определение облачных вычислений. Что происходит, так это то, что ИТ-директора и крупные предприятия этим пользуются. Так что это кажется очевидным для всех в этой комнате, потому что вы никогда не стали бы создавать свою компанию, покупая собственные серверы. Вы бы начали на Google, Yahoo или, скорее, Azure. Но для предприятия существуют десятилетия инфраструктуры, которую теперь нужно переместить в это облако. Так что это огромный сдвиг, который на самом деле... [усечено]\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Мы переходим в мир более дешевых вычислений по требованию из мира дорогих вычислений. Преимущество создания стартапа заключается в том, что у клиентов нет такого же трения, они будут идти и внедрять новые технологии. Как только вычисления становятся дешевле, становится легче внедрять новые решения. Что означает, что их барьер для того, чтобы показать вас — барьер намного ниже, что отлично подходит для стартапов. Мы переходим из мира настраиваемых платформ в мир стандартизированного программного обеспечения. Раньше вам приходилось создавать все настройки, все клиентские впечатления поверх самого программного обеспечения, а теперь клиенты понимают, что они не будут открывать платформы, и они могут настраивать слой поверх продукта. Раньше, когда вы начинали корпоративное программное обеспечение, вы могли продавать только пяти или десяти тысячам крупнейших компаний в ми��е. Потому что только у этих компаний были все необходимое, талант, инфраструктура и бюджет для внедрения вашей технологии на предприятии. Сегодня буквально компания из двух человек может зарегистрироваться в Box, а также мы работаем с General Electric, у которой более 300 тысяч сотрудников. Так что тот факт, что вы теперь можете обслуживать малый бизнес в любой точке мира, а также некоторые из крупнейших на планете, означает, что есть гораздо большие рынки, на которые вы можете нацелиться. Что делает это еще более выгодным экономическим предложением для выхода на корпоративный рынок. Сами платформы становятся более глобальными. Наши клиенты стали международными через пару недель после основания компании. Если бы вы делали корпоративный бизнес традиционным способом, это заняло бы годы, чтобы на самом деле иметь возможность выйти на международный уровень.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"И, наконец, самый глубокий сдвиг из всех — мобильные устройства. iPhone, iPad, Android, планшеты, ИТ этих моделей стали гораздо более ориентированными на пользователя. Это принципиально важно. В мире ИТ действующие игроки обычно выигрывают, потому что у них есть существующие отношения с ИТ-организацией, с ИТ-директором, с покупательной способностью этой компании. В модели, ориентированной на пользователя, пользователи приносят свои собственные технологии. Они приносят их в отдел продаж, они приносят их в отдел маркетинга, они приносят их в финансовый отдел, и вы можете создавать программное обеспечение вокруг этого пользователя. Что означает, что они могут привлечь предприятие, и вы можете продавать предприятию, когда они хотят иметь лучший контроль, лучшую безопасность, лучшую масштабируемость.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Так что у вас все еще та же модель, что и у компании по разработке бизнес-программного обеспечения, но способ попасть в компанию теперь — через конечного пользователя. Так что это количественные изменения. Всего пара количественных изменений, на планете более 2 миллиардов смартфонов. Это меняет каждую модель ИТ на планете. Потому что 10 лет назад, если вы управляли технологиями для компании, вам просто нужно было управлять компьютерной сетью, которая находилась внутри вашего здания. Но теперь с миллиардами смартфонов вам нужно управлять способами вычислений в любом месте в любое время в любой сети. И это становится большим в компаниях по разработке программного обеспечения, потому что ни один действующий игрок не создал технологический стек, который обеспечивает эту линию работы и то, как предприятия используют свои данные. Так что это создает огромную возможность для стартапа.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"В сети почти 3 миллиарда человек. Это означает, что каждое предприятие меняет то, как оно будет предоставлять свои собственные продукты своим клиентам. Что означает, что каждая отрасль меняется. Есть только два раза, два момента возможностей, когда в предприятии произойдет технологическая революция. Первый — когда меняется сырье. Так что стоимость вычислений снижается, и они централизуются и позволяют людям использовать их по требованию. Второе, что может измениться, — это то, что те самые люди, на которых эти предприятия должны нацеливаться, нуждаются в новых впечатлениях от продукта этого предприятия. Позвольте мне привести пример. Если вы выходите за пределы кампуса, вы, вероятно, используете что-то вроде Uber или Lyft. Если вы занимаетесь доставкой, если вы занимаетесь транспортом, Uber представляет собой огромное изменение для вашей отрасли. Так что вы не можете позволить Uber существовать, не понимая, каковы последствия Uber? Каковы последствия Instacart? Каковы последствия Lyft для моей бизнес-модели?\\nИтак, в мире, где предприятия сталкиваются с такими изменениями, вам понадобятся новые технологии, чтобы помочь им создать свои бизнес-модели, как они адаптируются к этому срыву. Вот почему сейчас такое удивительное время даже для создания вертикальных программных компаний для отраслей. Прямо сейчас каждая отрасль переживает с��ыв бизнес-модели и технологически ориентированный срыв. Это означает, что им понадобятся технологии от стартапов, чтобы помочь им справиться с этим. Я приведу пару примеров: так, в розничной торговле есть это видение омниканальной или многоканальной торговли. Вы будете делать покупки в Интернете, вы будете делать покупки на своем телефоне, вы будете делать покупки в магазине, и вы хотите, чтобы вам доставляли товары. Так что большая часть существующих технологий не обеспечивает многоканальную торговлю. Никто не готов, что это значит, когда потребители хотят покупать товары в любое время из любого места с лучшей информацией, лучшим интеллектом. Так что каждому розничному продавцу в мире понадобится новый технологический стек для обеспечения своих розничных впечатлений.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"В сфере здравоохранения каждое медицинское учреждение пытается найти способы создания более персонализированных впечатлений, более предсказуемых впечатлений, они хотят, чтобы медицина была адаптирована к индивидууму. Поскольку бизнес-модель здравоохранения меняется с того, чтобы быть о хирургии, взимании платы за осмотр, и вместо этого, действительно, где клиент платит за хорошее самочувствие и поддержание здоровья. Тогда внезапно каждому медицинскому учреждению нужна технология для предоставления м��дицинских услуг. Они захотят предоставлять телемедицину. Они захотят предоставлять медицинские услуги в более региональных местах, а не только в монолитной больничной среде. Появятся новые варианты использования. Как наши поставщики медицинских услуг будут связаны друг с другом, чтобы один врач мог принимать более правильные решения? Все это потребует нового корпоративного программного обеспечения для обеспечения этих бизнесов и отраслей.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"В медиа-пространстве, например, у вас есть мир, где отрасль переходит от действительно линейного программирования, будь то телевидение, музыка или фильмы, это линейная бизнес-модель, ориентированн��я на цепочку поставок, когда фильм снимается, он идет в кинотеатр на 3 месяца, затем он попадает в iTunes или на другие платформы, в мир, где люди хотят получать впечатления по требованию. Так что это изменит то, как работает распространение в масштабе 3 миллиардов человек в Интернете, и опять же, ни одна медиа-сеть не имеет платформы, которая на самом деле будет обеспечивать то, как контент, данные и информация перемещаются в эту систему в масштабе. Я только что был в Лос-Анджелесе вчера, встречался с медиа-компанией, которая в осн��вном провела предиктивную аналитику, чтобы найти своих потенциальных кинозрителей среди 3 миллиардов пользователей. Они хотят быть гипер-таргетированными на то, как добраться до конкретных 3 миллиардов поклонников, которые увлекаются определенными типами фильмов. И поэтому внезапно у вас есть кинокомпания, которой нужны большие данные, и им нужна бизнес-аналитика и маркетинг, чтобы идти и продвигать и распространять.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Именно здесь сходятся две отрасли, где понадобится все новое программное обеспечение. Так что каждая отрасль проходит через какую-то форму этого изменения. Вы можете взять любую отрасль, которую хотите, и увеличить ее, и сказать, каковы основные технологические факторы, которые изменят бизнес-модель на следующие пару лет? И тогда понадобится программное обеспечение для обеспечения этих типов впечатлений. Подумайте о будущем воды, кто будет его обеспечивать? Для этого понадобится программное обеспечение, я уверен.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Так что, в общем, каждая компания в мире, замечательная вещь в том, чтобы быть в Стэнфорде, — это то, что мы изучаем технологию. И мы думаем о технологической отрасли как об отрасли. Но на самом деле происходит то, что в каждой отрасли будет технологический компонент того, что они делают. Предприятия не смогут выжить в будущем, если они не станут хоро��и в технологиях. Если у них не будет компетенции в использовании данных и использовании этих новых инструментов. Но они будут делать это, работая с тем, что мы называем технологической отраслью.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Вместо того, чтобы все остальные развивали эти знания для себя. Так что в следующие пять-десять лет будет много партнерств, где компаниям понадобятся технологии, чтобы работать умнее, работать быстрее, им нужно будет делать это более безопасно. И это не только изменит то, как люди работают в этих средах, но в конечном итоге изменит бизнес-модели этих компаний. Так что это была вторая глава этого.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Теперь я дам вам несколько практических советов, кото��ые помогут вам начать. Честно говоря, большинство этих советов — это взгляд в ретроспективе, что означает, что это не то, как это произойдет, но я могу оглянуться назад и сказать, что это те вещи, которые привели к тому, что это стало правдой. Трудно быть детерминированным в отношении создания компании. У вас может не быть всего этого, но это даст вам представление о паттерне, который нужно распознать, когда вы создаете или думаете о создании компании по разработке корпоративного программного обеспечения.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Итак, первое — это выявлять технологические срывы. Это будет верно, независимо от того, создаете ли вы потребительский или корпоративный ��родукт. Остальное больше относится к корпоративному сектору, но это просто фундаментально, если вы собираетесь создать технологическую компанию. Вы должны искать новые технологии-помощники или основные тенденции, фундаментальные тенденции, которые создают большой разрыв между тем, как все делается, и тем, как это можно делать. Оглядываясь назад на наш бизнес, разрыв заключался в том, что хранение становилось дешевле, интернет становился быстрее, браузеры становились лучше, но мы все еще обменивались файлами очень сложными, очень громоздкими способами. В любое время, когда разница между тем, что возможно, и тем, как все работает сегодня, ма��симальна. Это возможность создать новую технологию для решения проблемы. Когда вы смотрите на корпоративный сектор, вопрос в том, что меняет то, что стоимость вычислений так быстро падает, в том, что предприятия могут делать со своими данными?\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Что это меняет с точки зрения бизнеса? Что было невозможно из-за экономической или технической целесообразности 10-15 лет назад, теперь возможно. Забавная вещь, которую можно делать время от времени, если вы найдете газетную статью из 1990-х или 1980-х годов, бизнес-статьи о технологиях, все, что мы на самом деле делаем, — это повторяем все технологии, которые мы пробовали 10, 20, 30 лет назад. Это было слишком дор��го, слишком неудобно, и у нас не было технологий-помощников, чтобы сделать это возможным. Вы можете видеть, как появляется эта концепция, что-то, что было невозможно 5, 10 лет назад, теперь очень практично. Я приведу вам пример. Есть компания под названием PlanGrid, кто-нибудь знает, что делает PlanGrid? Окей, круто. Вы в строительной отрасли? Вы? О боже! Что это вообще значит?\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"В: PlanGrid? Или строительство?\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Аарон Леви: Строительство.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"В: Я работаю на стройке, мы строим здания.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Аарон Леви: Черт возьми, это здорово. В общем, PlanGrid — это мобильное приложение, которое позволяет вам управлять строительными проектами, позволяет вам получать доступ к вашим чертежам, позволяет вам управлять всеми данными, связанными со строительным процессом. И что эта компания поняла, так это то, что 4 миллиарда долларов, я думаю, тратятся каждый год на печать чертежей. И у них есть все чертежи и обновления к ним каждый раз, когда есть изменение, затем они должны распространяться и каскадироваться через очень широкую сеть подрядчиков и строителей каждый раз. Даже если это одно небольшое, незначительное изменение, внезапно они поняли, что с iPad у нас есть идеальный форм-фактор для загрузки чертежей и контента. Это то, что может распространиться по строительной отрасли, которая не очень известна высокими технологиями, за исключением проектной стороны. Как они могут создать технологию, которая делает проблему совместной работы с данными очень простой и легкой в отрасли, которая не сильно менялась в последнее время? Это было идеальное открытие изменения на рынке и выяснение того, как эти две вещи сходятся. Затем эта команда создала для этого отличный стартап, который преуспевает и захватывает строительную отрасль, что подтверждается этим человеком. Спасибо.\\nСледующее, что нужно сделать в корпоративном секторе, — это начать намеренно с малого. Я имею в виду, что вы хотите найти, это более верно для всех компаний в корпоративном секторе в парадигме, ориентированной на пользователя, вы хотите найти клин, который является своего рода естественным, чтобы вы могли создать продукт, который проскользнет в щели других существующих продуктов. Но что-то, что, по вашему мнению, со временем расширится и станет более важным продуктом корпоративной структуры. Что вы хотите начать делать, так это сказать, мы возьмем этот небольшой кусочек проблемы, мы сделаем пользовательский опыт на нем невероятным. Мы либо изменим бизнес-модель, либо создадим новую технологию, чтобы сделать эту ранее существовавшую проблему очень, очень простой. Сначала это может показаться небольшим, может быть, вы нацелены на малый бизнес, а ��атем вы пойдете на более крупный рынок. Может быть, вы начинаете с небольшого кусочка варианта использования и расширяетесь, но вы намеренно начинаете с малого. Потому что вы не сможете конкурировать с действующим игроком, потому что действующий игрок всегда будет стремиться к полному решению. Так что вы должны найти, каковы пробелы в полном решении, которые достаточно значительны, чтобы клиент захотел решить проблему с помощью отдельной технологии. Но со временем вы сможете расширяться. Опять же, либо к более крупным клиентам, либо к большему количеству вариантов использования со временем.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Отличный пример — ZenPayroll. ZenPayroll был основан вып��скниками Стэнфорда пару лет назад. В общем, они обнаружили, что расчет заработной платы в малом бизнесе — это сложный и невероятно раздражающий процесс. Это потому, что мы используем тех же поставщиков, что и десятилетиями, и они были ориентированы на цифровую обработку. Вы не получали свои платежи в виде квитанции по электронной почте. Очень сложно. Вы не могли видеть графики своих зарплат. Не было действительно хороших данных по этому поводу. И они сказали, что м�� возьмем тот кусок, который наиболее болезненен для начала, связанный с наймом и оплатой труда людей. Просто этот процесс управления расчетом заработной платы. Мы подключимся к большому количеству существующей структуры. Но мы сделаем это очень просто. И теперь они могут со временем выходить на более крупный рынок, а также предоставлять новые услуги. И что происходит, так это то, что действующий игрок на этом рынке в конечном итоге смотрит на что-то вроде Zen Payroll и говорит, ну, это маленькое. Это только для малого бизнеса. Как это может быть очень мощным? Но это только начало. По мере того, как они получают этот клин, по мере того, как они вписываю��ся в рынок, они снова смогут расширяться со временем. Создавать больше услуг и больше возможностей. Но они нашли именно то, точное открытие, чтобы создать новую компанию и заставить ее появиться.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Затем вам действительно нужно найти асимметрии. Вы хотите делать то, что действующие игроки не могут или не будут делать, потому что либо экономика для них не имеет смысла, либо экономика настолько необычна, либо потому, что технически они не могут. Я приведу вам два примера. Итак, если вы собираетесь сегодня создавать программное обеспечение для корпоративного сектора, которое нацелено на категорию действующих игроков, у которых более ориентиров��нный на пакетный подход. Тогда то, что вы захотите сделать, — это создать технологию, которая не зависит от платформы. Что будут делать игроки с пакетами, так это хотеть, чтобы все было интегрировано само с собой, и в вертикальной интеграции больше ценности. Но вы хотите пойти по другому пути. Вы хотите, чтобы ваша технология работала на всех платформах. Таким образом, вы можете работать с таким большим количеством разных клиентов. Вы можете быть союзником для такого большого количества платформ, чего традиционный действующий игрок не может сделать. Это технически неосуществимо, потому что это архитектура или это фундаментальный компонент бизнес-модели, чтобы не делать этого. Другая вещь — это пытаться делать то, что экономически целесообразно. Вы можете посмотреть на структуру затрат действующей компании и обнаружить, где они не смогут снизить свои цены. Потому что эта бизнес-модель является фундаментальной для компании. Или где вы можете найти способы монетизации клиента, которые необычны или уникальны, которые никто раньше не обнаруживал, что делает непрактичным для кого-либо еще делать это.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Есть компания под названием Zenefits, у которой есть компания по разработке программного обеспечения для управления персоналом, которая помогает вам как небольшому стартапу управлять всеми вашими льготами, всей вашей информацией о персонале. И вместо того, чтобы взимать плату со стартапа, который может не ценить программное обеспечение на той стадии, на которой он находится, они понимают, что могут получать комиссию от страховых компаний, которая оплачивает возможность использования их программного обеспечения. Сам клиент не платит за Zenefits. Платформа Zenefits оплачивается страховой компанией, и таким образом они создали бизнес-модель, о которой ни одна другая компания по разработке программного обеспечения не могла подумать или атаковать. И они в равной степени идут и разрушают категорию, которая ранее не видела много инноваций, а именно пространство здравоохранения и льгот в малом бизнесе.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Следующее, что вам нужно сделать, — это найти самых сумасшедших, но все же разумных аутсайдеров в экосистеме клиентов. Итак, вам нужно найти клиентов, которые находятся на грани бизнеса, их бизнес-модели, их отрасли, и найти уникальные характеристики этих клиентов. Используйте их как своих ранних последователей. У Пола Грэма есть отличная статья, где он говорит о том, чтобы жить в будущем и создавать то, чего не хватает, когда вы живете в будущем. Это простой способ выявить тенденции и закономерности в отношении сбоев, которые происходят. То же самое верно и на рабочем месте. Если вы найдете клиентов, которые работают в будущем, вы сможете работать с ними, чтобы найти то, чего не хватает в будущем. И как нам создать технологию, которая поддерживает все эти новые варианты использования, которые появятся? Есть компания под названием Skycatch, которая занимается корпоративными дронами. Сначала это кажется немного странным, но в строительстве, сельском хозяйстве они сейчас используют дроны для сбора данных и моделирования различных сред. Так что эта компания может найти все компании, которые находятся на переднем крае своей отрасли. Что уникального или нового в том, как работают эти предприятия. И они работали со мног��ми из этих ранних последователей, чтобы создать свою платформу. Которая на самом деле является первой компанией по производству корпоративных дронов. Итак, идея в том, чтобы пойти и посмотреть на свой рынок. Найти клиентов на переднем крае своего рынка, которые используют технологии, чтобы вырваться вперед. И которые используют технологии для получения преимуществ в производительности, и пойти и поработать с ними, чтобы увидеть, как ваш продукт может развиваться.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Слушайте своих клиентов, но не всегда создавайте именно то, что они вам говорят. Это очень важное различие в создании корпоративного программного обеспечения. У ваших клиентов будет большое количество запросов. Ваша задача — свести эти списки к конечному продукту. Это не означает, что вы не будете создавать именно то, что они вам говорят. Ваша задача — выслушать их проблемы и перевести их в то, что создаст для них лучшее и простейшее решение. Это действительно ваша работа, и Palantir делает очень хороший пример очень, очень сложных проблем, а затем сводит их к простым решениям для сложных проблем, о которых клиент не знал бы, как попросить.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Вы хотите модулировать, а не настраивать. Так что создавайте платформу, а не встраивайте все пользовательские технологии и вертикальные клиентские впечатления в само программное обеспечение. Убедитесь, что вы действительно думаете об открытости и API как о способе создания впечатлений. Не встраивайте это непосредственно в продукт. Всегда сосредотачивайтесь на пользователе. Волшебная вещь в создании компании по разработке корпоративного программного обеспечения прямо сейчас заключается в том, что вы можете держать потребительскую информацию в центре продукта. Это всегда будет означать, что внедрение будет проще, что у вашего продукта будет гораздо больше шансов стать вирусным. Его становится легче продавать в организации. Всегда убеждайтесь, что вы привносите потребительскую ДНК в продукт. Ваш продукт должен прода��ать себя сам. Но это не означает, что вам не нужны продавцы. Так что это очень важное различие. Используйте все возможности интернета, используйте все возможности пользователей, чтобы добраться до ваших клиентов. Но вам все равно, скорее всего, понадобятся продажи как способ помочь вашим клиентам ориентироваться в вашем продукте, помочь вашим клиентам ориентироваться в конкурентной среде и экосистеме. Так что вам понадобятся очень специфические для предметной области продавцы, которые будут полезны вашему клиенту при развертывании, включенном в этих позициях. Но не делайте это заменой, не делайте это недостатком для того, чтобы не создавать отличный продукт. Так что вы в основном создаете продукт внутри этого. Компания под названием Mixpanel входит через разработчика и в конечном итоге продает этой организации с более внутренним процессом продаж. Также прочитайте эти три книги: «Преодоление пропасти», «Дилемма инноватора» и «За облаком». Эти три вместе, если вы прочтете их все запоем, вы выйдете вперед.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Итак, в заключение, сегодня, прямо сейчас, удивительное время для создания компании по разработке программного обеспечения. Я желаю вам удачи. Если не получится, мы нанимаем. Единственное, пожалуйста, не конкурируйте со мной, потому что у меня уже много конкурентов. В идеале, либ�� приходите работать к нам, либо создавайте свою собственную компанию.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Итак, большое спасибо!\"\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      children: _jsx(_components.em, {\n        children: \"Далее следует ранее переведенный контент из других источников.\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"6 ключевых принципов влияния Роберта Чалдини\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"В своей книге 1984 года «Влияние: психология убеждения» Роберт Чалдини подробно описал шесть ключевых принципов влияния. Эти принципы, которые также называют шестью принципами убеждения, таковы:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Взаимность:\"\n        }), \" Этот принцип основан на идее, что люди чувствуют необходимость отплатить другим за то, что они получ��ли. Это может быть мощным инструментом для построения отношений и влияния на поведение.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Обязательство и послед��вательность:\"\n        }), \" Люди хотят быть последовательными в своих убеждениях и ценностях. Если кто-то берет на себя публичное, активное и добровольное обязательство, он с большей вероятностью его выполнит.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Социальное доказательство:\"\n        }), \" Это идея о том, что на людей влияют действия других. Они с большей вероятностью сделают что-то, если увидят, что это делают другие люди.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Авторитет:\"\n        }), \" Люди с большей вероятностью будут убеждены теми, кого они воспринимают как экспертов или авторитетных лиц. Это связано с тем, что авторитет и доверие яв��яются ключевыми компонентами доверия.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Симпатия:\"\n        }), \" Людей легче убедить тем, кто им нравится. На это могут влиять такие факторы, как физическая привлекательность, поиск общих интересов и искренняя похвала.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Дефицит:\"\n        }), \" Когда что-то воспринимается как ограниченное в предложении, люди хотят этого больше. Это можно использовать для создания чувства срочности и поощрения людей к действию.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Важно отметить, что, хотя эти принципы можно использовать для убеждения и влияния на других, это не всегда этично.\"\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      children: \"Алексия Тсотсис: «Марк Андриссен о будущем предприятия»\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Краткое изложение статьи:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"В интервью 2013 года Марк Андриссен обсуждает ф��ндаментальный сдвиг в индустрии корпоративных технологий.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Основные тезисы:\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Переворот модели:\"\n          }), \" Исторически технологии внедрялись «сверху вниз» — от крупных корпораций и правительства к потребителям. Теперь модель перевернулась на «снизу вверх»: самые передовые технологии сначала появляются на потребительском рынке, а затем проникают в бизнес. Главный катализатор этого — массовое распространение смартфонов.\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"«Консьюмеризация» IT и BYOD:\"\n          }), \" Новое поколение сотрудников, выросшее на смартфонах и интуитивно понятных приложениях, ожидает такого же удобства от рабочих инструментов. Это приводит к тренду «Bring Your Own Device» (При��еси своё устройство), когда компании разрешают сотрудникам использовать личные устройства для работы.\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Новые лидеры Enterprise-рынка:\"\n          }), \" Появляется новое поколение компаний, создающих корпоративное ПО с «потребительским» подходом: простое, облачное (SaaS) и ориентированное на мобильные устройства. В качестве примеров он приводит Box, GitHub, Zendesk, Workday и Salesforce.\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Проблемы старых гигантов:\"\n          }), \" Традиционные поставщики, такие как SAP и Oracle, с трудом адаптируются к новым реалиям, поскольку их продукты и бизнес-модели устарели. Основная угроза для них — облачные аналоги, которые заменяют установленное ПО.\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Сдвиг от CAPEX к OPEX:\"\n          }), \" Компании всё чаще отказываю��ся от по��упки серверов и лицензий на ПО (капитальные затраты) в пользу аренды облачных сервисов (операционные затраты). Это значительно снижает порог входа для новых бизнесов.\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Цикличность рынка:\"\n          }), \" Андриссен отмечает, что Уолл-стрит циклично меняет свои предпочтения между потребительскими и корпоративными компаниями. Он советует предпринимателям игнорировать эти краткосрочные тренды и фокусироваться на создании качественного продукта.\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Рынки «победитель получает всё»:\"\n          }), \" По его мнению, технологические рынки стремятся к модели, где одна компания-лидер забирает до 90% прибыли, в то время как конкуренты остаются ни с чем.\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"В целом, Андриссен о��исывает эпоху, когда малый и средний бизнес получает доступ к тем же мощным инструментам, что и крупные корпорации, что коренным образом меняет конкурентную среду.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}